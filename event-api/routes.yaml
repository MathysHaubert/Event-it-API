event-api.check-connection:
    path: /connection
    request_methods: [GET]
    controller: App\Controllers\Connection\ConnectionController
    method: check

event-api.examples-token:
    path: /getExampleToken
    request_methods: [GET]
    controller: App\Controllers\Connection\ConnectionController
    method: exampleJWT

event-api.get-entity:
    path: /{entity}
    request_methods: [GET]
    controller: App\Controllers\EntityManagerController\EntityManagerController
    method: getEntity
    params:
        entity:
            [
                user,
                capteur,
                CapteurArchive,
                forum,
                ForumMessage,
                organization,
                reservation,
                room,
                currentUser,
                faq,
            ]

event-api.create-entity:
    path: /{entity}
    request_methods: [POST]
    controller: App\Controllers\EntityManagerController\EntityManagerController
    method: createEntity
    params:
        entity:
            [
                user,
                capteur,
                CapteurArchive,
                forum,
                ForumMessage,
                organization,
                reservation,
                room,
                currentUser,
                faq,
            ]

event-api.delete-entity:
    path: /{entity}
    request_methods: [DELETE]
    controller: App\Controllers\EntityManagerController\EntityManagerController
    method: deleteEntity
    params:
        entity:
            [
                user,
                capteur,
                CapteurArchive,
                forum,
                ForumMessage,
                organization,
                reservation,
                room,
                currentUser,
                faq,
            ]

event-api.update-entity:
    path: /{entity}
    request_methods: [PATCH]
    controller: App\Controllers\EntityManagerController\EntityManagerController
    method: updateEntity
    params:
        entity:
            [
                user,
                capteur,
                CapteurArchive,
                forum,
                ForumMessage,
                organization,
                reservation,
                room,
                currentUser,
                faq,
            ]

event-api.login:
    path: /login
    request_methods: [POST]
    controller: App\Controllers\Connection\ConnectionController
    method: login

event-api.get-current-user:
    path: /currentUser
    request_methods: [GET]
    controller: App\Controllers\Connection\ConnectionController
    method: currentUser
