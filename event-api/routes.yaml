event-api.check-connection:
  path: /connection
  request_methods: [GET]
  controller: App\Controllers\Connection\ConnectionController
  method: check

event-api.examples-token:
  path: /getExampleToken
  request_methods: [GET]
  controller: App\Controllers\Connection\ConnectionController
  method: exampleJWT

event-api.get-entity:
  path: /{entity}
  request_methods: [GET]
  controller: App\Controllers\EntityManagerController\EntityManagerController
  method: getEntity
  params:
    entity: [user, capteur, capteurArchive, forum, forumMessage, organization, reservation, room]

event-api.create-entity:
  path: /{entity}
  request_methods: [POST]
  controller: App\Controllers\EntityManagerController\EntityManagerController
  method: createEntity
  params:
    entity: [user, capteur, capteurArchive, forum, forumMessage, organization, reservation, room]

event-api.update-entity:
  path: /{entity}/{id}
  request_methods: [PUT]
  controller: App\Controllers\EntityManagerController\EntityManagerController
  method: updateEntity
  params:
    entity: [user, capteur, capteurArchive, forum, forumMessage, organization, reservation, room]
    id: \d+

event-api.login:
  path: /login
  request_methods: [POST]
  controller: App\Controllers\Connection\ConnectionController
  method: login