networks:
  api-firewall-network:
    name: api-firewall-network

services:
  api-firewall:
    container_name: api-firewall
    image: wallarm/api-firewall:v0.7.2
    restart: on-failure
    volumes:
      - ./firewall/swagger.yaml:/api-firewall/resources/swagger.yaml # Adjusted volume mapping
    environment:
      APIFW_API_SPECS: /api-firewall/resources/swagger.yaml # Adjusted environment variable
      APIFW_URL: http://0.0.0.0:8088/
      APIFW_SERVER_URL: http://backend:80
      APIFW_REQUEST_VALIDATION: BLOCK
      APIFW_RESPONSE_VALIDATION: LOG_ONLY
      APIFW_CUSTOM_BLOCK_STATUS_CODE: 403
    ports:
      - "8088:8088"
    stop_grace_period: 1s
    networks:
      - api-firewall-network
  backend:
    build:
      context: ./event-api
      dockerfile: Dockerfile
    image: php:8.2-apache
    container_name: php-api
    restart: on-failure
    ports:
      - 9000:80
    volumes:
      - ./event-api:/var/www/html
    stop_grace_period: 1s
    networks:
      - api-firewall-network
  db:
    image: biarms/mysql:5.7.30
    container_name: mysql-5.7
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: event-API
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    networks:
      - api-firewall-network
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: db
      PMA_USER: user
      PMA_PASSWORD: pass
      PMA_ARBITRARY: 1
    ports:
      - "8899:80"
    depends_on:
      - db
    networks:
      - api-firewall-network
